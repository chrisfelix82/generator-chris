<?xml version="1.0"?>

<project name="build" default="daily" basedir=".">

	<target name="init">

        <!--
        For RTC build definition use, modify the properties below to match your integration environment.  Usually you only need
        to have an two properties defined in your Jazz Build Engine command line definition.
        buildDir - The directory on the build machine where you would like to place the source code for your project
        tasks - the grunt tasks that your would like to run (by default 'default' is run.  see Gruntfile.js for more details on the tasks that are run)
        -->

		<property name="ios_env" value="iphone" />
		<property name="ios_env_uppercase" value="Iphone" />

		<property name="worklightProjectName" value="<%= projectName %>" />
		<property name="worklightAppName" value="<%= appName %>" />
		<property name="worklightAppVersion" value="1.0" />
		<property name="worklightEnvironments" value="common" />
		<property name="worklightAdapters" value="" />
		<property name="worklightServer" value="http://localhost:10080/<%= projectName %>" />
		
		<property name="ios_projectName" value="${worklightProjectName}${worklightAppName}${ios_env_uppercase}" />
		<property name="worklightDir" value="${basedir}/../../${worklightProjectName}/apps/${worklightAppName}" />
		<property name="worklightBuildOutputFolder" value="${basedir}/../output/worklightbuild" />

        <!-- Configuring the Worklight server and databases are one time tasks. TODO: Add your environment values here -->
        <property name="dbServer" value="" />
        <property name="dbUser" value="" />
        <property name="dbPassword" value="" />
        <property name="dbaUser" value="" />
        <property name="dbaPassword" value="" />
        <property name="dbDriverClasspath" value="" />
        <property name="libertyInstallDir" value="" />
        <property name="libertyServer" value="" />

		<taskdef resource="net/sf/antcontrib/antlib.xml">
			<classpath>
				<pathelement location="${basedir}/../lib/ant-contrib-1.0b3.jar" />
			</classpath>
		</taskdef>

		<taskdef resource="com/worklight/ant/defaults.properties">
			<classpath>
				<pathelement location="${basedir}/../lib/worklight-ant-builder.jar" />
			</classpath>
		</taskdef>
        <taskdef resource="com/worklight/ant/defaults.properties">
            <classpath>
                <pathelement location="${basedir}/../lib/worklight-ant-deployer.jar" />
            </classpath>
        </taskdef>

	</target>

	<!-- =========================================================================== -->
	<!-- Targets: daily -->
	<!-- =========================================================================== -->
	<target name="daily"
		depends="buildwlapp,deploywlapp,buildadapters,deployadapters" />

	<!-- =========================================================================== -->
	<!-- Targets: buildwlapp If you use the Dojo Toolkit, add skinBuildExtensions="build-dojo.xml” to app-builder element -->
	<!-- =========================================================================== -->
	<target name="buildwlapp" depends="init">
		<echo
			message="Packaging workligt app ${worklightAppName} with app-builder ant task" />
		<for list="${worklightEnvironments}" param="env" trim="true">
			<sequential>
				<app-builder environments="@{env}" nativeProjectPrefix="${worklightProjectName}"
					applicationFolder="${worklightDir}" outputFolder="${worklightBuildOutputFolder}"
					worklightServerHost="${worklightServer}">
				</app-builder>
			</sequential>
		</for>
	</target>

	<!-- =========================================================================== -->
	<!-- Targets: deploywlapp -->
	<!-- =========================================================================== -->
	<target name="deploywlapp" depends="init">
		<echo
			message="Deploying ${worklightProjectName}:${worklightAppName} to worklight server ${worklightServer} using app-deployer ant task" />
		<for list="${worklightEnvironments}" param="env" trim="true">
			<sequential>
				<if>
					<equals arg1="@{env}" arg2="common" />
					<then>
						<app-deployer
							deployable="${worklightBuildOutputFolder}/${worklightAppName}-@{env}.wlapp"
							worklightServerHost="${worklightServer}">
						</app-deployer>
					</then>
					<else>
						<app-deployer
							deployable="${worklightBuildOutputFolder}/${worklightAppName}-@{env}-${worklightAppVersion}.wlapp"
							worklightServerHost="${worklightServer}">
						</app-deployer>
					</else>
				</if>
			</sequential>
		</for>
	</target>

	<!-- =========================================================================== -->
	<!-- Targets: buildadapters-->
	<!-- =========================================================================== -->
	<target name="buildadapters" depends="init">
		<echo message="Build worklight adapter for project ${worklightProjectName}" />
		<for list="${worklightAdapters}" param="adapter" trim="true">
			<sequential>
				<adapter-builder folder="${worklightDir}/../../adapters/@{adapter}"
					destinationFolder="${worklightBuildOutputFolder}">
				</adapter-builder>
			</sequential>
		</for>
	</target>

	<!-- =========================================================================== -->
	<!-- Targets: deployadapters -->
	<!-- =========================================================================== -->
	<target name="deployadapters" depends="init">
		<echo message="Deploy worklight adapter for project ${worklightProjectName}" />
		<for list="${worklightAdapters}" param="adapter" trim="true">
			<sequential>
				<adapter-deployer deployable="${worklightBuildOutputFolder}/@{adapter}.adapter"
					worklightServerHost="${worklightServer}" />
			</sequential>
		</for>
	</target>
	
	<!-- =========================================================================== -->
	<!-- Targets: buildWAR -->
	<!-- =========================================================================== -->
	<target name="buildWAR" depends="init">
		<echo message="Building worklight WAR for project ${worklightProjectName}" />
		<javac srcdir="${worklightDir}/../../server/java" destdir="${worklightBuildOutputFolder}/classes"
			classpathref="server-classpath" verbose="true" />
		<war-builder projectfolder="${basedir}/../../${worklightProjectName}"
			destinationfolder="${worklightBuildOutputFolder}/wartemp"
			warfile="${worklightBuildOutputFolder}/${worklightProjectName}.war"
			classesfolder="${worklightBuildOutputFolder}/classes">
		</war-builder>
	</target>

    <!-- =========================================================================== -->
    <!-- Targets: deployWAR_Liberty -->
    <!-- =========================================================================== -->
    <target name="deployWAR_Liberty" depends="init">
        <configureapplicationserver contextroot="/${worklightProjectName}">
            <project warfile="${basedir}/../output/worklightbuild/${worklightProjectName}.war"/>

            <!-- Here you can define values which override the
                 default values of Worklight configuration properties -->
            <property name="serverSessionTimeout" value="10"/>

            <applicationserver>
                <websphereapplicationserver installdir="${libertyInstallDir}" profile="Liberty">
                    <server name="${libertyServer}"/>
                </websphereapplicationserver>
            </applicationserver>
            <database kind="Worklight">
                <db2 database="WRKLGHT" server="${dbServer}" user="${dbUser}" password="${dbPassword}"></db2>
                <driverclasspath>
                    <fileset dir="${basedir}/../lib">
                        <include name="db2jcc4.jar"/>
                        <include name="db2jcc_license_*.jar"/>
                    </fileset>
                </driverclasspath>
            </database>
            <database kind="WorklightReports">
                <db2 database="WLREPORT" server="${dbServer}" user="${dbUser}" password="${dbPassword}"></db2>
                <driverclasspath>
                    <fileset dir="${basedir}/../lib">
                        <include name="db2jcc4.jar"/>
                        <include name="db2jcc_license_*.jar"/>
                    </fileset>
                </driverclasspath>
            </database>
        </configureapplicationserver>
    </target>

    <!-- =========================================================================== -->
    <!-- Targets: undeployWAR_Liberty -->
    <!-- =========================================================================== -->
    <target name="undeployWAR_Liberty" depends="init">
        <unconfigureapplicationserver contextroot="/${worklightProjectName}">
            <project warfile="${basedir}/../output/worklightbuild/${worklightProjectName}.war"/>

            <!-- Here you can define values which override the
                 default values of Worklight configuration properties -->
            <property name="serverSessionTimeout" value="10"/>

            <applicationserver>
                <websphereapplicationserver installdir="${libertyInstallDir}" profile="Liberty">
                    <server name="${libertyServer}"/>
                </websphereapplicationserver>
            </applicationserver>
            <database kind="Worklight">
                <db2 database="WRKLGHT" server="${dbServer}" user="${dbUser}" password="${dbPassword}"></db2>
                <driverclasspath>
                    <fileset dir="${basedir}/../lib">
                        <include name="db2jcc4.jar"/>
                        <include name="db2jcc_license_*.jar"/>
                    </fileset>
                </driverclasspath>
            </database>
            <database kind="WorklightReports">
                <db2 database="WLREPORT" server="${dbServer}" user="${dbUser}" password="${dbPassword}"></db2>
                <driverclasspath>
                    <fileset dir="${basedir}/../lib">
                        <include name="db2jcc4.jar"/>
                        <include name="db2jcc_license_*.jar"/>
                    </fileset>
                </driverclasspath>
            </database>
        </unconfigureapplicationserver>
    </target>

    <!-- =========================================================================== -->
    <!-- Targets: configureDB2 -->
    <!-- =========================================================================== -->
    <target name="configure_DB2" depends="init">
        <configuredatabase kind="Worklight">
            <db2 database="WRKLGHT" server="${dbServer}"
                 user="${dbUser}" password="${dbPassword}">
                <dba user="${dbaUser}" password="${dbaPassword}"/>
            </db2>
            <driverclasspath>
                <fileset dir="${basedir}/../lib">
                    <include name="db2jcc4.jar"/>
                    <include name="db2jcc_license_*.jar"/>
                </fileset>
            </driverclasspath>
        </configuredatabase>

        <configuredatabase kind="WorklightReports">
            <db2 database="WLREPORT" server="${dbServer}"
                 user="${dbUser}" password="${dbPassword}">
                <dba user="${dbaUser}" password="${dbaPassword}"/>
            </db2>
            <driverclasspath>
                <fileset dir="${basedir}/../lib">
                    <include name="db2jcc4.jar"/>
                    <include name="db2jcc_license_*.jar"/>
                </fileset>
            </driverclasspath>
        </configuredatabase>

    </target>


</project>